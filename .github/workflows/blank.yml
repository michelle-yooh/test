# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request_review:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    permissions:
      actions: read
      checks: read
      contents: read
      deployments: read
      id-token: read
      issues: read
      discussions: read
      packages: read
      pages: read
      pull-requests: write
      repository-projects: read
      security-events: read
      statuses: read
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/github-script@v6
        with:
          script: |
            const owner = "michelle-yooh"
            const repo = "test"
            const pr = context.payload.pull_request
            const pull_number = pr.number

            let reviews = await github.rest.pulls.listReviews({
              owner,
              repo,
              pull_number,
            })
            let numApporved = 0
            let isApproved = true
            for (const review of reviews.data) {
              isApproved = isApproved && (review.state === "APPROVED")
              numApproved += 1
            }
            const branchProtection = await github.rest.repos.getBranchProtection({
              owner,
              repo,
              branch: "main",
            })
            const numRequiredApprovals = branchProtection.required_pull_request_reviews.required_approving_review_count
            if (numApproved >= numRequiredApprovals) {
              await github.rest.issues.addLabels({
                issue_number: pull_number,
                labels: ["pull ready"],
                owner,
                repo,
              })
            }
            
