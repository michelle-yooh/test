# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Add pull ready on approve

on:
  check_run:
    types: [completed]
  pull_request_review:
  workflow_dispatch:

jobs:
  AddLabel:
    if: github.ref != 'refs/heads/main'
    permissions:
      checks: read
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const owner = "google"
            const repo = "maxtext"
            const pull_number = context.payload.pull_request.number

            let isApproved = true
            const reviews = await github.rest.pulls.listReviews({
              owner,
              repo,
              pull_number,
            })
            for (const review of reviews.data) {
              isApproved = isApproved && (review.state === "APPROVED")
            }

            let allPassed = true
            const commits = await github.rest.pulls.listCommits({
              owner,
              repo,
              pull_number,
              per_page: 100,
            })
            const checkRuns = await github.rest.checks.listForRef({
              owner,
              repo,
              ref: commits.data.slice(-1)[0].sha,
            })
            for (const checkRun of checkRuns.data.check_runs) {
              if (checkRun.name === "AddLabel") continue
              allPassed = allPassed && (checkRun.conclusion === "success")
            }

            if (isApproved && allPassed) {
              await github.rest.issues.addLabels({
                issue_number: pull_number,
                labels: ["pull ready"],
                owner,
                repo,
              })
            }
            
